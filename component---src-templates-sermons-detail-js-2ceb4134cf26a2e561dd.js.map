{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/sermons.detail.js"],"names":["Header","siteTitle","className","style","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","useStaticQuery","site","siteMetadata","title","Date","getFullYear","SermonsDetail","sermon","pageContext","node","imageSrc","imageWithFallback","url","imageAlt","src","alt","persons","map","speaker","name","recordingDate","toLocaleDateString","audioFiles","file","controls","preload","description","dangerouslySetInnerHTML","__html"],"mappings":"gIAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACIC,UAAW,kBACbC,MAAO,CACLC,aAAa,YAGf,yBACED,MAAO,CACLE,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIJ,MAAO,CAAEE,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHL,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCOAY,IAlCA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUX,EAAgB,EAAhBA,UACpBY,EAAOC,yBAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQd,UAAWa,EAAKE,KAAKC,aAAaC,QAC1C,yBACEf,MAAO,CACLE,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,0BAAML,UAAWA,GAAYW,GAC7B,iDACgB,IAAIM,MAAOC,cAD3B,6B,yDCpCR,8FAIe,SAASC,EAAT,GAAyC,IAC9CC,EAD6C,EAAfC,YACTC,KACvBC,EAAWH,EAAOI,kBAAkBC,IACpCC,EAAWN,EAAOJ,MAEtB,OACI,kBAAC,IAAD,KACI,yBAAKhB,UAAW,mBACZ,yBAAKA,UAAU,yBACVuB,EAAW,yBAAKI,IAAKJ,EAAUK,IAAKF,IAAc,KACnD,yBAAK1B,UAAU,8BACX,4BAAKoB,EAAOJ,OACZ,wBAAIhB,UAAW,6BACVoB,EAAOS,QAAQC,KAAI,SAAAC,GAChB,OAAO,4BAAKA,EAAQC,YAMnCZ,EAAOa,cAAgB,2BAAK,IAAIhB,KAAKG,EAAOa,eAAgBC,sBAA4B,KAExFd,EAAOe,WAAWL,KAAI,SAAAM,GACnB,OAAO,6BAAK,2BAAOC,UAAQ,EAACV,IAAKS,EAAKX,IAAKa,QAAS,YAAxC,iDAGflB,EAAOmB,YAAc,yBAAKC,wBAAyB,CAACC,OAAQrB,EAAOmB,eAAmB,S","file":"component---src-templates-sermons-detail-js-2ceb4134cf26a2e561dd.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n      className={'organism-header'}\n    style={{\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.scss\"\n\nconst Layout = ({ children, className }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main className={className}>{children}</main>\n        <footer>\n          AudioVerse Â© {new Date().getFullYear()} All Rights Reserved.\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport './sermons.detail.scss'\n\nexport default function SermonsDetail({ pageContext }) {\n    const sermon = pageContext.node,\n        imageSrc = sermon.imageWithFallback.url,\n        imageAlt = sermon.title;\n\n    return (\n        <Layout>\n            <div className={'template-sermon'}>\n                <div className=\"template-sermon__meta\">\n                    {imageSrc ? <img src={imageSrc} alt={imageAlt}/> : null}\n                    <div className=\"template-sermon__meta-text\">\n                        <h1>{sermon.title}</h1>\n                        <ul className={'template-sermon__speakers'}>\n                            {sermon.persons.map(speaker => {\n                                return <li>{speaker.name}</li>\n                            })}\n                        </ul>\n                    </div>\n                </div>\n\n                {sermon.recordingDate ? <p>{(new Date(sermon.recordingDate)).toLocaleDateString()}</p> : null}\n\n                {sermon.audioFiles.map(file => {\n                    return <div><audio controls src={file.url} preload={'metadata'}>Your browser doesn't support this player.</audio></div>\n                })}\n\n                {sermon.description ? <div dangerouslySetInnerHTML={{__html: sermon.description}} /> : null}\n            </div>\n        </Layout>\n    )\n}\n"],"sourceRoot":""}